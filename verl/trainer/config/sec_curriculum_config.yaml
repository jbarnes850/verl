# SEC Curriculum Training Config for VERL
# Integrates Self-Evolving Curriculum with VERL's GRPO implementation

# dataset config
data:
  # SEC Curriculum Configuration
  use_sec_curriculum: True
  sec_alpha: 0.3  # SEC paper TD(0) learning rate
  sec_tau: 0.5    # SEC paper softmax temperature
  
  # CRMArena data configuration
  use_crmarena: true
  dataset_name: "Salesforce/CRMArenaPro"
  train_tasks: ["case_routing", "lead_routing", "lead_qualification", "knowledge_qa", "sales_insight_mining", "wrong_stage_rectification", "activity_priority", "named_entity_disambiguation", "handle_time", "transfer_count", "top_issue_identification", "monthly_trend_analysis", "best_region_identification", "sales_amount_understanding", "sales_cycle_understanding", "conversion_rate_comprehension"]
  test_tasks: ["invalid_config", "policy_violation_identification", "quote_approval"]
  train_split_ratio: 0.75
  cache_dir: "./data/verl_format"
  
  # Data paths (will be auto-generated from CRMArena data)
  train_files: ["./data/verl_format/train.parquet"]
  val_files: ["./data/verl_format/val.parquet"]
  
  prompt_key: prompt
  reward_fn_key: data_source
  max_prompt_length: 1024
  max_response_length: 4096
  
  # SEC paper requirement
  train_batch_size: 256
  val_batch_size: 32
  
  shuffle: False  # SEC curriculum handles sampling
  
  # Additional data configuration
  tokenizer: null
  use_shm: false
  return_raw_input_ids: false
  return_raw_chat: false
  return_full_prompt: false
  validation_shuffle: false
  filter_overlong_prompts: false
  filter_overlong_prompts_workers: 1
  truncation: error
  image_key: images
  video_key: videos
  trust_remote_code: false
  seed: 1
  
  # Custom dataset class (not needed for SEC)
  custom_cls:
    path: null
    name: null

# model config  
actor_rollout_ref:
  # Required: hybrid_engine flag for VERL
  hybrid_engine: true
  
  model:
    path: Qwen/Qwen3-4B
    enable_gradient_checkpointing: True
    
    # Additional required model configurations
    custom_chat_template: null
    use_shm: false
    external_lib: null
    override_config: 
      torch_dtype: bfloat16  # Fix Flash Attention dtype issue
    use_remove_padding: false
    lora_rank: 0
    lora_alpha: 16
    target_modules: all-linear
    exclude_modules: null
    use_liger: false
    use_fused_kernels: false
    fused_kernel_options:
      impl_backend: torch
    trust_remote_code: false
    
  rollout:
    name: vllm
    mode: sync
    # SEC paper requirement: 8 rollouts
    n: 8
    temperature: 0.7
    top_p: 0.9
    top_k: -1
    
    # Response generation settings
    prompt_length: 1024
    response_length: 4096
    
    # vLLM settings for 2xH100
    dtype: bfloat16
    gpu_memory_utilization: 0.25  # Reduced from 0.5 to save memory for GRPO
    ignore_eos: false
    enforce_eager: true
    free_cache_engine: true
    load_format: dummy_dtensor
    
    # 2xH100 tensor parallelism  
    tensor_model_parallel_size: 2
    max_num_batched_tokens: 8192
    max_num_seqs: 1024
    max_model_len: null
    
    # Additional rollout configurations
    layered_summon: false
    log_prob_micro_batch_size: null
    log_prob_micro_batch_size_per_gpu: 8  # Same as actor micro_batch_size_per_gpu
    log_prob_use_dynamic_bsz: ${actor_rollout_ref.actor.use_dynamic_bsz}
    log_prob_max_token_len_per_gpu: ${actor_rollout_ref.actor.ppo_max_token_len_per_gpu}
    disable_log_stats: true
    enable_chunked_prefill: true
    do_sample: true
    multi_stage_wake_up: false
    calculate_log_probs: false
    
    # Engine kwargs for vLLM
    engine_kwargs:
      vllm:
        swap_space: null
        disable_mm_preprocessor_cache: false
      sglang:
        attention_backend: null
    
    # Validation kwargs
    val_kwargs:
      top_k: -1
      top_p: 1.0
      temperature: 0
      n: 1
      do_sample: false
    
    # Multi-turn configuration
    multi_turn:
      enable: false
      max_assistant_turns: null
      tool_config_path: null
      max_user_turns: null
      max_parallel_calls: 1
      max_tool_response_length: 256
      tool_response_truncate_side: middle
      interaction_config_path: null
      completion_callback: null
      use_inference_chat_template: false
      tokenization_sanity_check_mode: strict
      format: hermes
    
    # Profiler configuration
    profiler:
      discrete: false
      all_ranks: false
      ranks: null
    
    # Agent configuration
    agent:
      num_workers: 8
    
  actor:
    # Required: FSDP strategy for 2xH100 setup
    strategy: fsdp
    
    # Required: PPO batch configuration
    ppo_mini_batch_size: 256
    ppo_micro_batch_size: null
    ppo_micro_batch_size_per_gpu: 8  # Reduced for memory with long sequences
    
    # Additional micro_batch_size fields (without ppo_ prefix) for validation
    micro_batch_size: null
    micro_batch_size_per_gpu: 8  # Same as ppo_micro_batch_size_per_gpu
    
    use_dynamic_bsz: false
    ppo_max_token_len_per_gpu: 16384
    
    # Required: PPO algorithm parameters
    clip_ratio: 0.2
    clip_ratio_low: 0.2
    clip_ratio_high: 0.2
    clip_ratio_c: 3.0
    ppo_epochs: 1
    entropy_coeff: 0
    
    # Policy loss configuration
    policy_loss:
      loss_mode: "vanilla"
      clip_cov_ratio: 0.0002
      clip_cov_lb: 1.0
      clip_cov_ub: 5.0
      kl_cov_ratio: 0.0002
      ppo_kl_coef: 0.1
    
    # SEC paper: no KL loss in actor (GRPO uses it in algorithm section)
    use_kl_loss: false
    kl_loss_coef: 0.0
    kl_loss_type: low_var_kl
    
    # Required: gradient and loss settings
    grad_clip: 1.0
    loss_agg_mode: token-mean
    shuffle: false
    
    # Additional required configurations
    use_torch_compile: true
    ulysses_sequence_parallel_size: 1
    entropy_from_logits_with_chunking: true
    entropy_checkpointing: false
    
    # Checkpoint configuration
    checkpoint:
      save_contents: ['model', 'optimizer', 'extra']
      load_contents: ${actor_rollout_ref.actor.checkpoint.save_contents}
    
    # Profiler configuration
    profiler:
      discrete: false
      all_ranks: false
      ranks: null
    
    optim:
      # SEC paper requirement
      lr: 0.000001
      betas: [0.9, 0.99]
      eps: 0.00000001
      weight_decay: 0.01
      
    # Required: FSDP configuration
    fsdp_config:
      wrap_policy:
        min_num_params: 0
      param_offload: false
      optimizer_offload: false
      reshard_after_forward: true
      fsdp_size: -1

  # Reference model configuration (required for KL penalty)
  ref:
    strategy: ${actor_rollout_ref.actor.strategy}
    
    fsdp_config:
      param_offload: false
      reshard_after_forward: true
      forward_prefetch: false
      wrap_policy:
        min_num_params: 0
    
    use_torch_compile: ${actor_rollout_ref.actor.use_torch_compile}
    log_prob_micro_batch_size: null
    log_prob_micro_batch_size_per_gpu: 8  # Same as actor micro_batch_size_per_gpu
    log_prob_use_dynamic_bsz: ${actor_rollout_ref.actor.use_dynamic_bsz}
    log_prob_max_token_len_per_gpu: ${actor_rollout_ref.actor.ppo_max_token_len_per_gpu}
    ulysses_sequence_parallel_size: ${actor_rollout_ref.actor.ulysses_sequence_parallel_size}
    entropy_from_logits_with_chunking: true
    entropy_checkpointing: false
    
    profiler:
      discrete: false
      all_ranks: false
      ranks: null

# critic config (required by VERL even for GRPO)
critic:
  strategy: fsdp
  rollout_n: 8
  
  # Batch configuration
  ppo_micro_batch_size: null
  ppo_micro_batch_size_per_gpu: 8  # Same as actor
  forward_micro_batch_size: ${critic.ppo_micro_batch_size}
  forward_micro_batch_size_per_gpu: ${critic.ppo_micro_batch_size_per_gpu}
  
  # Additional micro_batch_size fields (without ppo_ prefix) for validation
  micro_batch_size: null
  micro_batch_size_per_gpu: 8  # Same as ppo_micro_batch_size_per_gpu
  
  use_dynamic_bsz: ${actor_rollout_ref.actor.use_dynamic_bsz}
  ppo_max_token_len_per_gpu: 32768
  forward_max_token_len_per_gpu: ${critic.ppo_max_token_len_per_gpu}
  ulysses_sequence_parallel_size: 1
  
  model:
    path: Qwen/Qwen3-4B
    enable_gradient_checkpointing: true
    trust_remote_code: false
    use_shm: false
    tokenizer_path: ${actor_rollout_ref.model.path}
    override_config: 
      torch_dtype: bfloat16  # Fix Flash Attention dtype issue
    external_lib: ${actor_rollout_ref.model.external_lib}
    enable_activation_offload: false
    use_remove_padding: false
    lora_rank: 0
    lora_alpha: 16
    target_modules: all-linear
    
  optim:
    lr: 1e-5
    weight_decay: 0.01
    lr_warmup_steps_ratio: 0.
    min_lr_ratio: null
    warmup_style: constant
    total_training_steps: -1
    
  ppo_mini_batch_size: 256
  ppo_epochs: 1
  grad_clip: 1.0
  cliprange_value: 0.5
  loss_agg_mode: token-mean
  shuffle: ${actor_rollout_ref.actor.shuffle}
  
  checkpoint:
    save_contents: ['model', 'optimizer', 'extra']
    load_contents: ${critic.checkpoint.save_contents}
  
  profiler:
    discrete: false
    all_ranks: false
    ranks: null
  
  fsdp_config:
    wrap_policy:
      min_num_params: 0
    param_offload: false
    reshard_after_forward: true
    fsdp_size: -1

# algorithm config  
algorithm:
  # SEC paper uses GRPO
  adv_estimator: grpo
  norm_adv_by_std_in_grpo: true
  
  # SEC paper: no KL penalty in reward
  use_kl_in_reward: false
  kl_penalty: kl
  
  gamma: 1.0
  lam: 1.0
  
  # KL control configuration
  kl_ctrl:
    type: fixed
    kl_coef: 0.001
    horizon: 10000
    target_kl: 0.1
  
  # Preference feedback PPO (not used for SEC)
  use_pf_ppo: false
  pf_ppo:
    reweight_method: pow
    weight_pow: 2.0

# reward model config (required by VERL)
reward_model:
  enable: false
  strategy: fsdp
  
  model:
    input_tokenizer: ${actor_rollout_ref.model.path}
    path: ~/models/FsfairX-LLaMA3-RM-v0.1
    use_shm: false
    external_lib: ${actor_rollout_ref.model.external_lib}
    use_remove_padding: false
    use_fused_kernels: ${actor_rollout_ref.model.use_fused_kernels}
    trust_remote_code: false
    
    fsdp_config:
      wrap_policy:
        min_num_params: 0
      param_offload: false
      reshard_after_forward: true
      fsdp_size: -1
      forward_prefetch: false
  
  # Micro batch size configuration for reward model
  micro_batch_size: null
  micro_batch_size_per_gpu: 8  # Same as actor for consistency
  max_length: null
  ulysses_sequence_parallel_size: 1
  use_dynamic_bsz: ${critic.use_dynamic_bsz}
  forward_max_token_len_per_gpu: ${critic.forward_max_token_len_per_gpu}
  
  reward_manager: naive
  launch_reward_fn_async: false
  
  sandbox_fusion:
    url: null
    max_concurrent: 64
    memory_limit_mb: 1024
  
  profiler:
    discrete: false
    all_ranks: false
    ranks: null

# trainer config
trainer:
  # Project and experiment names
  project_name: sec_curriculum_verl_qwen3_4b
  experiment_name: sec_grpo_qwen3_4b
  
  # Training epochs and steps
  total_epochs: 1
  max_epochs: 1
  total_training_steps: null
  
  # Checkpointing and testing
  save_freq: 50
  test_freq: 25
  
  # Hardware configuration
  n_gpus_per_node: 2
  nnodes: 1
  device: cuda
  
  # Logging configuration
  logger: ['console', 'wandb']  # Enable both console and wandb logging
  log_val_generations: 0
  rollout_data_dir: null
  validation_data_dir: null
  
  # WandB configuration
  wandb_project: "sec-curriculum-verl-qwen3-4b"
  wandb_run_name: "sec-grpo-qwen3-4b-crmarena"
  wandb_tags: ["SEC", "GRPO", "CRMArena", "curriculum-learning"]
  
  # Profiling configuration
  profile_steps: null
  controller_nsight_options:
    trace: "cuda,nvtx,cublas,ucx"
    cuda-memory-usage: "true"
    cuda-graph-trace: "graph"
  worker_nsight_options:
    trace: "cuda,nvtx,cublas,ucx"
    cuda-memory-usage: "true"
    cuda-graph-trace: "graph"
    capture-range: "cudaProfilerApi"
    capture-range-end: null
    kill: none
  
  # Resume and checkpoint management
  resume_mode: auto
  resume_from_path: null
  default_local_dir: ./checkpoint_qwen3_4b
  default_hdfs_dir: null
  del_local_ckpt_after_load: false
  remove_previous_ckpt_in_save: false
  max_actor_ckpt_to_keep: null
  max_critic_ckpt_to_keep: null
  
  # Validation configuration
  val_before_train: false  # Disabled to save time during debugging
  val_only: false
  
  # Other configurations
  balance_batch: true
  esi_redundant_time: 0
  ray_wait_register_center_timeout: 600
  critic_warmup: 0

# custom reward function definition
custom_reward_function:
  # The path to the file containing your customized reward function.
  # If not specified, pre-implemented reward functions will be used.
  path: /home/user/verl/crm-arena/src/crm_reward_functions.py
  # The name of the reward function within the specified file. Default is 'compute_score'.
  name: compute_score
  # Additional reward function kwargs
  reward_kwargs:
    partial_credit: 0.1  # Following SEC paper: 0.1 for incorrect but well-formatted

# Ray initialization
ray_init:
  num_cpus: 16
  timeline_json_file: null